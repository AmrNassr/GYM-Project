/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gymm;

import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import static org.junit.runner.Computer.serial;

/**
 *
 * @author amnassar
 */

public class editserial extends javax.swing.JFrame {
Connection con ;
    PreparedStatement pst ;
    ResultSet rs;
    Home h ;
    public String datee ; 
    public  String dayOfWeek;
    String totall ;
    
    
    public editserial() throws ParseException {
        initComponents();
        con=DBConnect.connect();
        comboxfromcombo1();
        customers();
        AutoCompleteDecorator.decorate(cmname);
          Calendar cal = new GregorianCalendar();
             int day = cal.get(Calendar.DAY_OF_MONTH);
                int month=cal.get(Calendar.MONTH)+1;
                int year = cal.get(Calendar.YEAR);
         String dateString = String.format("%d-%d-%d", year, month, day);
           java.util.Date date = new SimpleDateFormat("yyyy-M-d").parse(dateString);
           date1.setText(year+"-"+month+"-"+day);
           datee=date1.getText().toString();
            dayOfWeek = new SimpleDateFormat("EEEE", Locale.ENGLISH).format(date);
                int monthh=cal.get(Calendar.MONTH)+1;
                int yearr = cal.get(Calendar.YEAR);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        cmname = new javax.swing.JComboBox();
        person2 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        amount = new javax.swing.JTextField();
        save = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        date1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setMaximumSize(new java.awt.Dimension(530, 550));
        jPanel1.setMinimumSize(new java.awt.Dimension(530, 550));
        jPanel1.setPreferredSize(new java.awt.Dimension(530, 550));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel14.setBackground(new java.awt.Color(255, 255, 255));
        jLabel14.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Customer");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 130, -1));

        cmname.setEditable(true);
        cmname.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cmname.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        jPanel1.add(cmname, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, 230, 30));

        person2.setEditable(false);
        person2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jPanel1.add(person2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, 230, 30));

        jLabel17.setBackground(new java.awt.Color(255, 255, 255));
        jLabel17.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("serial");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 140, 30));

        amount.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        amount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                amountKeyPressed(evt);
            }
        });
        jPanel1.add(amount, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 120, 230, 30));

        save.setBackground(new java.awt.Color(98, 113, 146));
        save.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        save.setForeground(new java.awt.Color(255, 255, 255));
        save.setText("Clear");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        jPanel1.add(save, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 160, 120, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/64586a0ad51dc03.jpg"))); // NOI18N
        jLabel1.setMaximumSize(new java.awt.Dimension(530, 550));
        jLabel1.setMinimumSize(new java.awt.Dimension(530, 550));
        jLabel1.setPreferredSize(new java.awt.Dimension(530, 550));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 460, 260));

        date1.setText("jLabel2");
        jPanel1.add(date1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 200, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setSize(new java.awt.Dimension(474, 300));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void amountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_amountKeyPressed
         if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
             {
                 try {
                     String sqll = "SELECT serial FROM gym.people where serial ='"+amount.getText()+"'";
                     pst=(PreparedStatement) con.prepareStatement(sqll);
                     rs=pst.executeQuery();
                     if (rs.next())
                     {
                         JOptionPane.showMessageDialog(this, "this id already exists");
                         person2.setText("");
                     }
                     else
                     {
                         try {
                             String sqla = "UPDATE gym.people SET serial = '"+amount.getText()+"'"
                                     + " WHERE phone='"+person2.getText()+"' and name='"+cmname.getSelectedItem().toString()+"'";
                             pst=(PreparedStatement) con.prepareStatement(sqla);
                             pst.executeUpdate();
                             JOptionPane.showMessageDialog(this, "Serial updated successfully");
                             cmname.setSelectedIndex(0);
                             amount.setText("");
                             person2.setText("");
                         } catch (SQLException ex) {
                             JOptionPane.showMessageDialog(this, ex);
                         }
                     }  } catch (SQLException ex) {
                     Logger.getLogger(editserial.class.getName()).log(Level.SEVERE, null, ex);
                 }
             }
                               
                               
        }
    }//GEN-LAST:event_amountKeyPressed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed

       amount.setText("");

    }//GEN-LAST:event_saveActionPerformed

  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amount;
    private javax.swing.JComboBox cmname;
    private javax.swing.JLabel date1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField person2;
    private javax.swing.JButton save;
    // End of variables declaration//GEN-END:variables
  public void customers()
   {
        try {
             String sql="SELECT distinct name  FROM gym.people order by name ";
             pst=(PreparedStatement) con.prepareStatement(sql);
             rs=pst.executeQuery();
             while(rs.next()){
                String name = rs.getString("name");
                
                cmname.addItem(name);
  
             }

         } catch (SQLException ex) {
             
         }
   }
    
     public void comboxfromcombo1()
      {
                   cmname.addItemListener(new ItemListener() {
            public void itemStateChanged(ItemEvent event) {
                JComboBox cmitemm = (JComboBox) event.getSource();

                Object item = event.getItem();
                
                 try {
             String sql="SELECT * FROM gym.people where name='"+cmname.getSelectedItem().toString()+"'";
             pst=(PreparedStatement) con.prepareStatement(sql);
             rs=pst.executeQuery();
             while(rs.next()){
                 amount.setText(rs.getString("serial"));
                 person2.setText(rs.getString("phone"));
              
              }

         } catch (SQLException ex) {
             
         }
         }
        });
       
      }
        
}
